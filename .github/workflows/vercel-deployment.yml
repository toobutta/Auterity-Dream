name: Vercel Deployment Fix

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
  pull_request:
    branches: [ main, develop ]
    paths-ignore:
      - '**/*.md'
      - 'docs/**'

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.11'

jobs:
  # Simple validation for Vercel compatibility
  vercel-validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd frontend && npm ci

      - name: Build frontend for Vercel
        run: |
          cd frontend
          npm run build
        env:
          NODE_ENV: production
          VITE_API_BASE_URL: https://auterity-backend.onrender.com

      - name: Check build size
        run: |
          cd frontend
          if [ -d "dist" ]; then
            echo "Build successful"
            du -sh dist/
            ls -la dist/
          else
            echo "Build failed - no dist directory"
            exit 1
          fi

  # Optional: Lightweight backend check
  backend-health-check:
    runs-on: ubuntu-latest
    continue-on-error: true  # Don't block deployment on backend issues
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install backend dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Basic syntax check
        run: |
          cd backend
          python -m py_compile app/main.py
          echo "Backend syntax check passed"

  # Simplified security check
  security-scan:
    runs-on: ubuntu-latest
    continue-on-error: true  # Don't block on security warnings
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Frontend security scan
        run: |
          cd frontend
          npm ci
          npm audit --audit-level high || echo "Security warnings found but not blocking"

  # Deployment readiness summary
  deployment-ready:
    runs-on: ubuntu-latest
    needs: [vercel-validation]
    if: always()
    steps:
      - name: Check deployment readiness
        run: |
          echo "üîç Checking Vercel deployment readiness..."
          
          FRONTEND_STATUS="${{ needs.vercel-validation.result }}"
          
          echo "Frontend Build: $FRONTEND_STATUS"
          
          if [[ "$FRONTEND_STATUS" == "success" ]]; then
            echo "‚úÖ READY FOR VERCEL DEPLOYMENT"
            echo "Frontend build successful - Vercel deployment should work"
          else
            echo "‚ùå DEPLOYMENT BLOCKED"
            echo "Frontend build failed - fix build issues before deploying to Vercel"
            exit 1
          fi

      - name: Vercel deployment tips
        if: always()
        run: |
          echo "üí° Vercel Deployment Tips:"
          echo "1. Ensure vercel.json is properly configured"
          echo "2. Check environment variables in Vercel dashboard"
          echo "3. Monitor build logs in Vercel for any missing dependencies"
          echo "4. Backend should be deployed separately (Heroku/Railway recommended)"
