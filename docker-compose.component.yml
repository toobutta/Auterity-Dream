# Docker Compose for Individual Component Development
version: '3.8'

services:
  # AutoMatrix Workflow Engine
  autmatrix-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/autmatrix
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  autmatrix-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev

  autmatrix:
    profiles: ["autmatrix"]
    depends_on:
      - autmatrix-backend
      - autmatrix-frontend

  # RelayCore AI Router
  relaycore:
    build:
      context: ./systems/relaycore
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/relaycore
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    depends_on:
      - postgres
      - redis
    volumes:
      - ./systems/relaycore:/app
      - /app/node_modules
    command: npm run dev
    profiles: ["relaycore"]

  # NeuroWeaver ML Platform
  neuroweaver-backend:
    build:
      context: ./systems/neuroweaver/backend
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/neuroweaver
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MODEL_STORAGE_PATH=/app/models
    depends_on:
      - postgres
      - redis
    volumes:
      - ./systems/neuroweaver/backend:/app
      - neuroweaver-models:/app/models
    command: python -m app.main

  neuroweaver-frontend:
    build:
      context: ./systems/neuroweaver/frontend
      dockerfile: Dockerfile
    ports:
      - "3003:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:3002
    volumes:
      - ./systems/neuroweaver/frontend:/app
      - /app/node_modules
    command: npm run dev

  neuroweaver:
    profiles: ["neuroweaver"]
    depends_on:
      - neuroweaver-backend
      - neuroweaver-frontend

  # Shared Infrastructure
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=auterity
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-unified-db.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Monitoring (Optional)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    profiles: ["monitoring"]

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3004:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./monitoring/grafana:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    profiles: ["monitoring"]

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:
  neuroweaver-models:

networks:
  default:
    name: auterity-components