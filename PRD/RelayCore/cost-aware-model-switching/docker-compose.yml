version: '3.8'

services:
  cost-aware-service:
    build: .
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/cost_aware_db
      - RELAYCORE_API_URL=http://relaycore:3000
      - AUTERITY_API_URL=http://auterity:3001
    volumes:
      - ./src:/app/src
      - ./config:/app/config
      - ./tests:/app/tests
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    command: npm run dev

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=cost_aware_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  redis-data:
  postgres-data: