metadata:
  name: "parts_inventory"
  description: "Template for parts department and inventory management"
  category: "automotive"
  version: "1.0.0"
  author: "TuneDev"
  created_date: "2025-08-02"
  updated_date: "2025-08-02"
  tags:
    - "automotive"
    - "parts"
    - "inventory"
    - "supply chain"
    - "logistics"

template:
  task: "vertical-tune"
  vertical: "automotive"
  specialization: "parts_inventory"
  model: "${model}"
  method: "${method}"
  dataset: "${dataset}"
  parameters:
    epochs: "${epochs}"
    learning_rate: "${learning_rate}"
    batch_size: "${batch_size}"
    lora_r: "${lora_r}"
    lora_alpha: "${lora_alpha}"
    lora_dropout: "${lora_dropout}"
    warmup_steps: "${warmup_steps}"
    weight_decay: "${weight_decay}"
    gradient_accumulation_steps: "${gradient_accumulation_steps}"
    max_grad_norm: "${max_grad_norm}"
  evaluation:
    metrics: "${metrics}"
    test_split: "${test_split}"
    validation_split: "${validation_split}"
    eval_steps: "${eval_steps}"
    eval_strategy: "${eval_strategy}"
  output:
    dir: "${output_dir}"
    format: "${output_format}"
    save_steps: "${save_steps}"
    save_strategy: "${save_strategy}"
  deployment:
    endpoint_type: "${endpoint_type}"
    quantization: "${quantization}"
    instance_type: "${instance_type}"
    instance_count: "${instance_count}"
    scaling_policy: "${scaling_policy}"
    min_instances: "${min_instances}"
    max_instances: "${max_instances}"
    auto_scaling_metrics: "${auto_scaling_metrics}"
    inference_timeout: "${inference_timeout}"

example:
  task: "vertical-tune"
  vertical: "automotive"
  specialization: "parts_inventory"
  model: "mistral-7b"
  method: "QLoRA"
  dataset: "./datasets/vehicle_specs.csv"
  parameters:
    epochs: 3
    learning_rate: 2e-4
    batch_size: 8
    lora_r: 16
    lora_alpha: 32
    lora_dropout: 0.05
    warmup_steps: 100
    weight_decay: 0.01
    gradient_accumulation_steps: 4
    max_grad_norm: 1.0
  evaluation:
    metrics: ["accuracy", "f1", "precision"]
    test_split: 0.1
    validation_split: 0.1
    eval_steps: 200
    eval_strategy: "steps"
  output:
    dir: "./checkpoints/mistral-parts-inventory"
    format: "safetensors"
    save_steps: 500
    save_strategy: "steps"
  deployment:
    endpoint_type: "vllm"
    quantization: "int8"
    instance_type: "g4dn.xlarge"
    instance_count: 1
    scaling_policy: "request-count-based"
    min_instances: 1
    max_instances: 5
    auto_scaling_metrics: ["RequestCount", "CPUUtilization"]
    inference_timeout: 30

variables:
  - name: "model"
    description: "Base model to fine-tune"
    type: "string"
    options: ["mistral-7b", "llama-7b", "llama-13b", "gpt-j-6b", "phi-2", "gemma-7b"]
    default: "mistral-7b"
    required: true
    
  - name: "method"
    description: "Fine-tuning method"
    type: "string"
    options: ["QLoRA", "LoRA", "Full-Finetune", "Adapter"]
    default: "QLoRA"
    required: true
    
  - name: "dataset"
    description: "Path to dataset"
    type: "string"
    default: "./datasets/vehicle_specs.csv"
    required: true
    
  - name: "epochs"
    description: "Number of training epochs"
    type: "integer"
    default: 3
    min: 1
    max: 10
    required: true
    
  - name: "learning_rate"
    description: "Learning rate"
    type: "number"
    default: 2e-4
    min: 1e-6
    max: 1e-2
    required: true
    
  - name: "batch_size"
    description: "Batch size"
    type: "integer"
    default: 8
    options: [1, 2, 4, 8, 16, 32]
    required: true
    
  - name: "lora_r"
    description: "LoRA r parameter (rank)"
    type: "integer"
    default: 16
    options: [4, 8, 16, 32, 64]
    required: true
    
  - name: "lora_alpha"
    description: "LoRA alpha parameter (scaling)"
    type: "integer"
    default: 32
    options: [8, 16, 32, 64, 128]
    required: true
    
  - name: "lora_dropout"
    description: "LoRA dropout"
    type: "number"
    default: 0.05
    min: 0
    max: 0.5
    required: true
    
  - name: "warmup_steps"
    description: "Number of warmup steps"
    type: "integer"
    default: 100
    min: 0
    max: 1000
    required: false
    
  - name: "weight_decay"
    description: "Weight decay for AdamW optimizer"
    type: "number"
    default: 0.01
    min: 0
    max: 0.1
    required: false
    
  - name: "gradient_accumulation_steps"
    description: "Number of gradient accumulation steps"
    type: "integer"
    default: 4
    min: 1
    max: 32
    required: false
    
  - name: "max_grad_norm"
    description: "Maximum gradient norm for gradient clipping"
    type: "number"
    default: 1.0
    min: 0.1
    max: 10.0
    required: false
    
  - name: "metrics"
    description: "Evaluation metrics"
    type: "array"
    items:
      type: "string"
      options: ["accuracy", "f1", "precision", "recall", "rouge", "bleu"]
    default: ["accuracy", "f1", "precision"]
    required: true
    
  - name: "test_split"
    description: "Test split ratio"
    type: "number"
    default: 0.1
    min: 0.05
    max: 0.3
    required: true
    
  - name: "validation_split"
    description: "Validation split ratio"
    type: "number"
    default: 0.1
    min: 0.05
    max: 0.3
    required: false
    
  - name: "eval_steps"
    description: "Evaluation steps"
    type: "integer"
    default: 200
    min: 50
    max: 1000
    required: false
    
  - name: "eval_strategy"
    description: "Evaluation strategy"
    type: "string"
    options: ["steps", "epoch", "no"]
    default: "steps"
    required: false
    
  - name: "output_dir"
    description: "Output directory for checkpoints"
    type: "string"
    default: "./checkpoints/mistral-parts-inventory"
    required: true
    
  - name: "output_format"
    description: "Output format"
    type: "string"
    options: ["safetensors", "pytorch", "onnx"]
    default: "safetensors"
    required: true
    
  - name: "save_steps"
    description: "Save checkpoint steps"
    type: "integer"
    default: 500
    min: 100
    max: 5000
    required: false
    
  - name: "save_strategy"
    description: "Save checkpoint strategy"
    type: "string"
    options: ["steps", "epoch", "no"]
    default: "steps"
    required: false
    
  - name: "endpoint_type"
    description: "Inference endpoint type"
    type: "string"
    options: ["vllm", "triton", "tensorrt", "onnx", "tgi"]
    default: "vllm"
    required: true
    
  - name: "quantization"
    description: "Quantization method"
    type: "string"
    options: ["none", "int8", "int4", "gptq", "awq"]
    default: "int8"
    required: true
    
  - name: "instance_type"
    description: "Instance type for deployment"
    type: "string"
    options: ["g4dn.xlarge", "g5.xlarge", "c5.2xlarge", "p3.2xlarge", "p4d.24xlarge"]
    default: "g4dn.xlarge"
    required: true
    
  - name: "instance_count"
    description: "Number of instances"
    type: "integer"
    default: 1
    min: 1
    max: 10
    required: true
    
  - name: "scaling_policy"
    description: "Auto-scaling policy"
    type: "string"
    options: ["request-count-based", "latency-based", "cpu-based", "none"]
    default: "request-count-based"
    required: false
    
  - name: "min_instances"
    description: "Minimum number of instances for auto-scaling"
    type: "integer"
    default: 1
    min: 1
    max: 5
    required: false
    
  - name: "max_instances"
    description: "Maximum number of instances for auto-scaling"
    type: "integer"
    default: 5
    min: 1
    max: 20
    required: false
    
  - name: "auto_scaling_metrics"
    description: "Metrics for auto-scaling"
    type: "array"
    items:
      type: "string"
      options: ["RequestCount", "CPUUtilization", "GPUUtilization", "MemoryUtilization", "Latency"]
    default: ["RequestCount", "CPUUtilization"]
    required: false
    
  - name: "inference_timeout"
    description: "Inference timeout in seconds"
    type: "integer"
    default: 30
    min: 5
    max: 300
    required: false

use_cases:
  - name: "Parts Identification"
    description: "Identify correct parts based on vehicle specifications and repair needs"
    dataset_requirements: "Parts catalogs, vehicle specifications, parts compatibility data, OEM part numbers"
    recommended_parameters:
      model: "mistral-7b"
      method: "QLoRA"
      batch_size: 8
      lora_r: 16
      
  - name: "Inventory Management"
    description: "Optimize parts inventory levels, reorder points, and stocking decisions"
    dataset_requirements: "Inventory data, sales history, seasonal trends, supplier lead times, carrying costs"
    recommended_parameters:
      model: "llama-7b"
      method: "QLoRA"
      batch_size: 4
      lora_r: 32
      
  - name: "Parts Compatibility"
    description: "Determine cross-compatibility of parts across different vehicle makes, models, and years"
    dataset_requirements: "Parts interchange data, fitment information, OEM specifications, aftermarket compatibility"
    recommended_parameters:
      model: "llama-13b"
      method: "QLoRA"
      batch_size: 4
      lora_r: 32
      
  - name: "Order Processing"
    description: "Streamline parts ordering, fulfillment, and customer communication"
    dataset_requirements: "Order processing workflows, customer communications, shipping information, backorder handling"
    recommended_parameters:
      model: "mistral-7b"
      method: "QLoRA"
      batch_size: 8
      lora_r: 16
      
  - name: "Supplier Interaction"
    description: "Manage communications with parts suppliers, including orders, returns, and warranty claims"
    dataset_requirements: "Supplier communications, ordering procedures, return policies, warranty processes"
    recommended_parameters:
      model: "mistral-7b"
      method: "QLoRA"
      batch_size: 8
      lora_r: 16

integration_points:
  - system: "Parts Inventory System"
    description: "Integration with parts inventory management systems"
    requirements: "API access, inventory data, part numbers, pricing, location information"
    
  - system: "DMS (Dealership Management System)"
    description: "Integration with dealership management system"
    requirements: "API access, parts sales data, customer records, service orders"
    
  - system: "Supplier Ordering Systems"
    description: "Integration with supplier ordering and fulfillment systems"
    requirements: "API access, ordering protocols, availability checking, shipping tracking"
    
  - system: "Service Department System"
    description: "Integration with service department management system"
    requirements: "API access, repair orders, parts requests, technician notes"
    
  - system: "RelayCore"
    description: "Integration with RelayCore platform for parts data exchange"
    requirements: "RelayCore API credentials, connector configuration, data synchronization setup"

deployment_recommendations:
  development:
    instance_type: "g4dn.xlarge"
    quantization: "int8"
    scaling_policy: "none"
    
  testing:
    instance_type: "g4dn.xlarge"
    quantization: "int8"
    scaling_policy: "none"
    
  production:
    instance_type: "g5.xlarge"
    quantization: "int8"
    scaling_policy: "request-count-based"
    min_instances: 2
    max_instances: 10
    auto_scaling_metrics: ["RequestCount", "CPUUtilization", "Latency"]

inventory_management_concepts:
  - name: "Economic Order Quantity (EOQ)"
    description: "Optimal order quantity that minimizes total inventory costs"
    ai_applications:
      - "Calculate EOQ based on historical data and carrying costs"
      - "Adjust EOQ recommendations based on seasonal trends"
      - "Optimize order quantities across multiple parts categories"
      
  - name: "Just-In-Time (JIT) Inventory"
    description: "Minimizing inventory by ordering parts as needed for specific repairs"
    ai_applications:
      - "Predict parts needs based on scheduled service appointments"
      - "Optimize delivery timing to minimize holding costs"
      - "Balance JIT approach with emergency part availability"
      
  - name: "ABC Analysis"
    description: "Categorizing inventory by value and usage frequency"
    ai_applications:
      - "Automatically classify parts into A, B, and C categories"
      - "Recommend inventory policies based on classification"
      - "Identify parts moving between categories over time"
      
  - name: "Safety Stock"
    description: "Buffer inventory to prevent stockouts during lead time variability"
    ai_applications:
      - "Calculate optimal safety stock levels based on demand variability"
      - "Adjust safety stock recommendations seasonally"
      - "Identify critical parts requiring higher safety stock"
      
  - name: "Inventory Turnover"
    description: "Rate at which inventory is sold and replaced"
    ai_applications:
      - "Calculate and track inventory turnover by category"
      - "Identify slow-moving parts for potential liquidation"
      - "Recommend strategies to improve turnover rates"

parts_categories:
  - name: "Maintenance Parts"
    description: "Regular maintenance items like filters, fluids, and belts"
    inventory_strategy: "High stock levels, fast turnover, multiple suppliers"
    ai_focus:
      - "Demand forecasting based on service schedules"
      - "Seasonal adjustment for maintenance patterns"
      - "Quality and price comparison across suppliers"
      
  - name: "Mechanical Parts"
    description: "Engine, transmission, and drivetrain components"
    inventory_strategy: "Balanced stock of common items, special order for rare items"
    ai_focus:
      - "Failure rate prediction by vehicle model and mileage"
      - "Cross-compatibility identification"
      - "OEM vs. aftermarket quality comparison"
      
  - name: "Body Parts"
    description: "Exterior and structural components"
    inventory_strategy: "Minimal stock, primarily special order"
    ai_focus:
      - "Collision repair part bundling recommendations"
      - "Paint and finish matching assistance"
      - "Insurance-approved alternative suggestions"
      
  - name: "Electrical Components"
    description: "Sensors, modules, and electrical system parts"
    inventory_strategy: "Stock high-failure items, special order others"
    ai_focus:
      - "Diagnostic-to-part recommendation"
      - "Compatibility verification with vehicle systems"
      - "Technical specification matching"
      
  - name: "Accessories"
    description: "Non-essential add-ons and customization items"
    inventory_strategy: "Display stock, special order, seasonal adjustment"
    ai_focus:
      - "Customer preference prediction"
      - "Upsell and bundle recommendations"
      - "Seasonal trend forecasting"

supply_chain_considerations:
  - name: "Lead Time Management"
    description: "Strategies for managing supplier delivery timeframes"
    ai_capabilities:
      - "Predict actual lead times based on historical data"
      - "Recommend order timing based on lead time analysis"
      - "Identify alternative suppliers for critical parts"
      
  - name: "Multi-Supplier Strategy"
    description: "Managing relationships with multiple parts suppliers"
    ai_capabilities:
      - "Compare pricing and availability across suppliers"
      - "Optimize order allocation based on terms and performance"
      - "Track supplier reliability and quality metrics"
      
  - name: "Returns Management"
    description: "Handling defective, incorrect, or unused parts returns"
    ai_capabilities:
      - "Automate return authorization processes"
      - "Track return eligibility and deadlines"
      - "Analyze return patterns to identify quality issues"
      
  - name: "Core Management"
    description: "Tracking and processing rebuildable cores for exchange"
    ai_capabilities:
      - "Track core inventory and return status"
      - "Calculate core charges and credits"
      - "Optimize core return timing for maximum value"